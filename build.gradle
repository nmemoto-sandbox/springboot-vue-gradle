buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'jp.nmemoto'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    runtime('org.springframework.boot:spring-boot-devtools')
    runtime('org.postgresql:postgresql')
    compileOnly('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

task yarnInstall << {
    'yarn install'.execute().waitForProcessOutput(System.out, System.err)
}

task yarnBuild << {
    'yarn build'.execute().waitForProcessOutput(System.out, System.err)
}

task yarnServe << {
    String activeProfile = System.properties['spring.profiles.active']
    if (activeProfile == null || 'dev') {
        'yarn serve'.execute()
    } else {
        tasks.yarnBuild.execute()
    }
}



yarnBuild.dependsOn yarnInstall
yarnServe.dependsOn yarnInstall
bootJar.dependsOn yarnBuild
bootRun.dependsOn yarnServe